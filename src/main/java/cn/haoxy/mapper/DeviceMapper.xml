<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.haoxy.dao.DeviceMapper">
  <resultMap id="BaseResultMap" type="cn.haoxy.model.Device">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="place_id" jdbcType="INTEGER" property="placeId" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="device_no" jdbcType="VARCHAR" property="deviceNo" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="register_time" jdbcType="BIGINT" property="registerTime" />
    <result column="quit_time" jdbcType="BIGINT" property="quitTime" />
    <result column="quit_mark" jdbcType="INTEGER" property="quitMark" />
  </resultMap>
  <resultMap id="InfoResultMap" type="cn.haoxy.model.Device">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="maker" jdbcType="VARCHAR" property="maker" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    
    <result column="place_id" jdbcType="INTEGER" property="placeId" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="device_no" jdbcType="VARCHAR" property="deviceNo" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="register_time" jdbcType="BIGINT" property="registerTime" />
    <result column="quit_time" jdbcType="BIGINT" property="quitTime" />
    <result column="quit_mark" jdbcType="INTEGER" property="quitMark" />
  </resultMap>
  
  <resultMap id="CountTypeResultMap" type="cn.haoxy.model.DeviceGroupCount">
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  
  <resultMap id="DistributionResultMap" type="cn.haoxy.model.DeviceDistribution" >
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="number" jdbcType="INTEGER" property="number" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type_id, place_id, location_id, device_no, remark, register_time, quit_time, 
    quit_mark
  </sql>
  <select id="selectByExample" parameterType="cn.haoxy.model.DeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectDeviceInfoByLocationID" parameterType="java.lang.Integer" resultMap="InfoResultMap">
    select 
        device.id as id,
	    device.type_id as type_id,
	    device_type.name as name,
	    device_type.type as type,
	    device_type.unit as unit,
	    device_type.model as model,
	    device_type.maker as maker,
	    device.place_id as place_id,
	    t_place.place as place,
	    device.location_id as location_id,
	    t_location.location as location,
	    device.device_no as device_no,
	    device.remark as remark,
	    device.register_time as register_time,
	    device.quit_time as quit_time,
	    device.quit_mark as quit_mark
    from device
        right join device_type on device.type_id = device_type.id 
        right join location as t_location on device.location_id = t_location.id 
        right join place as t_place on device.place_id = t_place.id
    where 
        device.location_id = #{locationID,jdbcType=INTEGER}
      and
        device.quit_mark = -1
  </select>
  
  <select id="selectQuitDeviceInfoByLocationID" parameterType="java.lang.Integer" resultMap="InfoResultMap">
    select 
        device.id as id,
        device.type_id as type_id,
        device_type.name as name,
        device_type.type as type,
        device_type.unit as unit,
        device_type.model as model,
        device_type.maker as maker,
        device.place_id as place_id,
        t_place.place as place,
        device.location_id as location_id,
        t_location.location as location,
        device.device_no as device_no,
        device.remark as remark,
        device.register_time as register_time,
        device.quit_time as quit_time,
        device.quit_mark as quit_mark
    from device
        right join device_type on device.type_id = device_type.id 
        right join location as t_location on device.location_id = t_location.id 
        right join place as t_place on device.place_id = t_place.id
    where 
        device.location_id = #{locationID,jdbcType=INTEGER}
      and
        device.quit_mark = 2
  </select>
  
  <select id="selectDeviceCountGroup" resultMap="CountTypeResultMap">
    select 
	 count(device.id) as number,
	 device.type_id as type_id,
	 device_type.name as type
	from 
	    device 
	right join 
	    device_type on device.type_id = device_type.id
	where device.quit_mark &lt; 0
	group by device.type_id
  </select>
  
  <select id="selectDeviceDistribution" resultMap="DistributionResultMap" parameterType="java.lang.Integer">
    select 
	 device.location_id as location_id,
	 location.location as location,
	 count(device.id) as number
	from 
	    device 
	right join 
	    location on device.location_id = location.id
	right join 
	    device_type on device.type_id = device_type.id
	where 
	device.quit_mark &lt; 0 
	and 
	location.delete_mark &lt; 0 
	and 
	device.type_id = #{typeId,jdbcType=INTEGER}
	group by device.location_id
  
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.haoxy.model.DeviceExample">
    delete from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.haoxy.model.Device">
    insert into device (id, type_id, place_id, 
      location_id, device_no, remark, 
      register_time, quit_time, quit_mark
      )
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{placeId,jdbcType=INTEGER}, 
      #{locationId,jdbcType=INTEGER}, #{deviceNo,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{registerTime,jdbcType=TIMESTAMP}, #{quitTime,jdbcType=TIMESTAMP}, #{quitMark,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.haoxy.model.Device">
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="placeId != null">
        place_id,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
      <if test="deviceNo != null">
        device_no,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="quitTime != null">
        quit_time,
      </if>
      <if test="quitMark != null">
        quit_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="placeId != null">
        #{placeId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="deviceNo != null">
        #{deviceNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="quitTime != null">
        #{quitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="quitMark != null">
        #{quitMark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.haoxy.model.DeviceExample" resultType="java.lang.Long">
    select count(*) from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="checkIfdeviceNoExist" parameterType="String" resultType="java.lang.Integer">
    select count(*) from device as d where d.device_no = #{deviceNo,jdbcType=VARCHAR}
  </select>
  
  <update id="updateDeleteDeviceById" parameterType="cn.haoxy.model.Device">
    update device set quit_mark = 1 , quit_time = #{quitTime,jdbcType=BIGINT} where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateQuitDeviceById" parameterType="cn.haoxy.model.Device">
    update device set quit_mark = 2 , quit_time = #{quitTime,jdbcType=BIGINT},remark = #{remark,jdbcType=VARCHAR} where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByExampleSelective" parameterType="map">
    update device
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.placeId != null">
        place_id = #{record.placeId,jdbcType=INTEGER},
      </if>
      <if test="record.locationId != null">
        location_id = #{record.locationId,jdbcType=INTEGER},
      </if>
      <if test="record.deviceNo != null">
        device_no = #{record.deviceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.quitTime != null">
        quit_time = #{record.quitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.quitMark != null">
        quit_mark = #{record.quitMark,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device
    set id = #{record.id,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      place_id = #{record.placeId,jdbcType=INTEGER},
      location_id = #{record.locationId,jdbcType=INTEGER},
      device_no = #{record.deviceNo,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      quit_time = #{record.quitTime,jdbcType=TIMESTAMP},
      quit_mark = #{record.quitMark,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.haoxy.model.Device">
    update device
    <set>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="placeId != null">
        place_id = #{placeId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null">
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="deviceNo != null">
        device_no = #{deviceNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="quitTime != null">
        quit_time = #{quitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="quitMark != null">
        quit_mark = #{quitMark,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.haoxy.model.Device">
    update device
    set type_id = #{typeId,jdbcType=INTEGER},
      place_id = #{placeId,jdbcType=INTEGER},
      location_id = #{locationId,jdbcType=INTEGER},
      device_no = #{deviceNo,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      quit_time = #{quitTime,jdbcType=TIMESTAMP},
      quit_mark = #{quitMark,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>